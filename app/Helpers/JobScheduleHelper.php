<?php

namespace App\Helpers;

use App\Models\Dispatch;
use App\Models\Treatments;
use App\Models\User;
class JobScheduleHelper
{
    public static function setData($value)
    {
        $arr =  [
            'job_id' => $value->job_id,
            'deal_id' => $value->deal_id,
            'invoice_number' => ($value->is_error_redo === "yes" ? "ERROR | REDO - ":"") . ($value->deals ? ($value->deals->invoice_number ? $value->deals->invoice_number. ' ' . $value->job_number : $value->job_prefix . ' ' . $value->job_number ) : $value->job_prefix . ' ' . $value->job_number),
            'hs_ticket_id' => $value->hs_ticket_id,
            'job_status' => $value->job_status,
            'priority' => $value->priority,
            'chem_priority' => $value->chem_priority,
            'burn_priority' => $value->burn_priority,
            'blast_priority' => $value->blast_priority,
            'treatment_priority' => $value->treatment_priority,
            'powder_priority' => $value->powder_priority,
            'amount' => $value->amount,
            "file_link" => $value->deals ? $value->deals->file_link : null,
            'promised_date' => $value->deals ? $value->deals->promised_date : null,
            'client_name' => $value->deals ? $value->deals->client_name : null,
            'po_number' => $value->deals ? $value->deals->po_number : null,
            'colour' => $value->colour,
            'material' => $value->material,
            'process' => $value->treatment,
            'chem_bay_required' => $value->chem_bay_required,
            'chem_status' => $value->chem_status,
            'chem_bay_contractor' => $value->chem_bay_contractor,
            'chem_contractor_return_date' => $value->chem_contractor_return_date,
            'chem_date' => $value->chem_date,
            'end_chem_date' => $value->end_chem_date,
            'chem_completed' => $value->chem_completed,
            'treatment_bay_required' => $value->treatment_bay_required,
            'treatment_bay_contractor' => $value->treatment_bay_contractor,
            'treatment_date' => $value->treatment_date,
            'end_treatment_date' => $value->end_treatment_date,
            'treatment_contractor_return_date' => $value->treatment_contractor_return_date,
            'treatment_completed' => $value->treatment_completed,
            'treatment_status' => $value->treatment_status,
            'burn_bay_required' => $value->burn_bay_required,
            'burn_bay_contractor' => $value->burn_bay_contractor,
            'burn_contractor_return_date' => $value->burn_contractor_return_date,
            'burn_date' => $value->burn_date,
            'end_burn_date' => $value->end_burn_date,
            'burn_status' => $value->burn_status,
            'burn_completed' => $value->burn_completed,
            'blast_bay_required' => $value->blast_bay_required,
            'blast_bay_contractor' => $value->blast_bay_contractor,
            'blast_contractor_return_date' => $value->blast_contractor_return_date,
            'blast_date' => $value->blast_date,
            'end_blast_date' => $value->end_blast_date,
            'blast_status' => $value->blast_status,
            'blast_completed' => $value->blast_completed,
            'powder_bay_required' => $value->powder_bay_required,
            'powder_bay' => $value->powder_bay,
            'powder_date' => $value->powder_date,
            'end_powder_date' => $value->end_powder_date,
            'powder_status' => $value->powder_status,
            'powder_completed' => $value->powder_completed,
            'packaged' => $value->packaged,
            'is_error_redo' => $value->is_error_redo,
            'updated_at' => $value->updated_at,
            'column' => $value->column,
        ];

        if ($value->column) {
            $arr['column'] = $value->column;
        }
        if ($value->signature) {
            $arr['signature'] = $value->signature;
        }

        $arr['job_comments'] = CommentHelper::setCommentData($value->job_comments, $value, $value->lines);
        $arr['lines'] = $value->lines ? $value->lines->transform(function ($line) use ($value) {
            $sign = Dispatch::where('object_id', $line->line_item_id)->where('object_type', 'LINE_ITEM')->first();
                return [
                    "line_item_id" => $line->line_item_id,
                    "description" => $line->description,
                    "uom" => $line->measurement,
                    "sku" => $line->name,
                    // "product_name" => $line->line_product ? $line->line_product->product_name : null,
                    "product_name" => ($line->name ? $line->name : ($line->line_product ? $line->line_product->product_name : '')) . ' ' . ($line->description ? $line->description : ($line->line_product ? $line->line_product->desrciption : '')),
                    // "SKU" => $line->line_product ? $line->line_product->SKU : null,
                    "file_link" => $line->line_product ? $line->line_product->file_link : null,
                    "colour_name" => $line->colour,
                    "signature" => $sign ? $sign->signature : '',
                    "quantity" => $line->quantity,
                    "line_item_status" => $line->line_item_status,
                    "created_at" => $line->created_at,
                    "updated_at" => $line->updated_at,
                    "deleted_at" => $line->deleted_at,
                    "number_dispatched" => $line->number_dispatched,
                    "material" => $value->material,
                    "chem_bay" => $line->chem_bay,
                    "burn_bay" => $line->burn_bay,
                    "treatment_bay" => $line->treatment_bay,
                    "blast_bay" => $line->blast_bay,
                    "powder_bay" => $line->powder_bay,
                    "chem_date" => $line->chem_date,
                "burn_date" => $line->burn_date,
                    "treatment_date" => $line->treatment_date,
                    "blast_date" => $line->blast_date,
                    "powder_date" => $line->powder_date,
                    "chem_status" => $line->chem_status,
                "burn_status" => $line->burn_status,
                    "treatment_status" => $line->treatment_status,
                    "blast_status" => $line->blast_status,
                    "powder_status" => $line->powder_status,
                    "chem_completed" => $line->chem_completed,
                "burn_completed" => $line->burn_completed,
                    "treatment_completed" => $line->treatment_completed,
                    "blast_completed" => $line->blast_completed,
                    "powder_completed" => $line->powder_completed
                ];
        }) : [];
        return $arr;
    }

    public static function setDataDateKanbanBay($value, $col)
    {
        return [
            'column' => $col,
            'job_id' => $value->job_id,
            'invoice_number' => ($value->is_error_redo === "yes" ? "ERROR | REDO - ":"") . ($value->deals ? ($value->deals->invoice_number ? $value->deals->invoice_number. ' ' . $value->job_number : $value->job_prefix . ' ' . $value->job_number ) : $value->job_prefix . ' ' . $value->job_number),
            'hs_ticket_id' => $value->hs_ticket_id,
            'job_status' => $value->job_status,
            'priority' => $value->priority,
            'chem_priority' => $value->chem_priority,
            'burn_priority' => $value->burn_priority,
            'blast_priority' => $value->blast_priority,
            'treatment_priority' => $value->treatment_priority,
            'powder_priority' => $value->powder_priority,
            'amount' => $value->amount,
            "file_link" => $value->deals ? $value->deals->file_link : null,
            'promised_date' => $value->deals ? $value->deals->promised_date : null,
            'client_name' => $value->deals ? $value->deals->client_name : null,
            'po_number' => $value->deals ? $value->deals->po_number : null,
            'colour' => $value->colour,
            'material' => $value->material,
            'process' => $value->treatment,
            'chem_bay_required' => $value->chem_bay_required,
            'chem_status' => $value->chem_status,
            'chem_bay_contractor' => $value->chem_bay_contractor,
            'chem_contractor_return_date' => $value->chem_contractor_return_date,
            'chem_date' => $value->chem_date,
            'end_chem_date' => $value->end_chem_date,
            'chem_completed' => $value->chem_completed,
            'treatment_bay_required' => $value->treatment_bay_required,
            'treatment_bay_contractor' => $value->treatment_bay_contractor,
            'treatment_date' => $value->treatment_date,
            'end_treatment_date' => $value->end_treatment_date,
            'treatment_contractor_return_date' => $value->treatment_contractor_return_date,
            'treatment_completed' => $value->treatment_completed,
            'treatment_status' => $value->treatment_status,
            'burn_bay_required' => $value->burn_bay_required,
            'burn_bay_contractor' => $value->burn_bay_contractor,
            'burn_contractor_return_date' => $value->burn_contractor_return_date,
            'burn_date' => $value->burn_date,
            'end_burn_date' => $value->end_burn_date,
            'burn_status' => $value->burn_status,
            'burn_completed' => $value->burn_completed,
            'blast_bay_required' => $value->blast_bay_required,
            'blast_bay_contractor' => $value->blast_bay_contractor,
            'blast_contractor_return_date' => $value->blast_contractor_return_date,
            'blast_date' => $value->blast_date,
            'end_blast_date' => $value->end_blast_date,
            'blast_status' => $value->blast_status,
            'blast_completed' => $value->blast_completed,
            'powder_bay_required' => $value->powder_bay_required,
            'powder_bay' => $value->powder_bay,
            'powder_date' => $value->powder_date,
            'end_powder_date' => $value->end_powder_date,
            'powder_status' => $value->powder_status,
            'powder_completed' => $value->powder_completed,
            'packaged' => $value->packaged,
            'updated_at' => $value->updated_at,
            'is_error_redo' => $value->is_error_redo,
            'job_comments' => CommentHelper::setCommentData($value->job_comments, $value, $value->lines),
            'lines' => $value->lines ? $value->lines->transform(function ($line) use ($value) {
                return [
                    "line_item_id" => $line->line_item_id,
                    "description" => $line->description,
                    "uom" => $line->measurement,
                    "sku" => $line->name,
                    // "product_name" => $line->line_product ? $line->line_product->product_name : null,
                    "product_name" => ($line->name ? $line->name : ($line->line_product ? $line->line_product->product_name : '')) . ' ' . ($line->description ? $line->description : ($line->line_product ? $line->line_product->desrciption : '')),
                    // "SKU" => $line->line_product ? $line->line_product->SKU : null,
                    "file_link" => $line->line_product ? $line->line_product->file_link : null,
                    "colour_name" => $line->colour,
                    "material" => $value->material,
                    "line_item_status" => $line->line_item_status,
                    "quantity" => $line->quantity,
                    "line" => $line->quantity,
                    "chem_bay" => $line->chem_bay,
                    "burn_bay" => $line->burn_bay,
                    "treatment_bay" => $line->treatment_bay,
                    "blast_bay" => $line->blast_bay,
                    "powder_bay" => $line->powder_bay,
                    "chem_date" => $line->chem_date,
                    "burn_date" => $line->burn_date,
                    "treatment_date" => $line->treatment_date,
                    "blast_date" => $line->blast_date,
                    "powder_date" => $line->powder_date,
                    "chem_status" => $line->chem_status,
                    "burn_status" => $line->burn_status,
                    "treatment_status" => $line->treatment_status,
                    "blast_status" => $line->blast_status,
                    "powder_status" => $line->powder_status,
                    "chem_completed" => $line->chem_completed,
                    "burn_completed" => $line->burn_completed,
                    "treatment_completed" => $line->treatment_completed,
                    "blast_completed" => $line->blast_completed,
                    "powder_completed" => $line->powder_completed
                ];
            }) : [],
        ];
    }

    public static function setDataOverviewDateKanban($value)
    {
        return [
            'job_id' => $value->job_id,
            'invoice_number' => ($value->is_error_redo === "yes" ? "ERROR | REDO - ":"") . ($value->deals ? ($value->deals->invoice_number ? $value->deals->invoice_number. ' ' . $value->job_number : $value->job_prefix . ' ' . $value->job_number ) : $value->job_prefix . ' ' . $value->job_number),
            'hs_ticket_id' => $value->hs_ticket_id,
            'job_status' => $value->job_status,
            'priority' => $value->priority,
            'chem_priority' => $value->chem_priority,
            'burn_priority' => $value->burn_priority,
            'blast_priority' => $value->blast_priority,
            'treatment_priority' => $value->treatment_priority,
            'powder_priority' => $value->powder_priority,
            'amount' => $value->amount,
            "file_link" => $value->deals ? $value->deals->file_link : null,
            'promised_date' => $value->deals ? $value->deals->promised_date : null,
            'client_name' => $value->deals ? $value->deals->client_name : null,
            'po_number' => $value->deals ? $value->deals->po_number : null,
            'colour' => $value->colour,
            'material' => $value->material,
            'process' => $value->treatment,
            'chem_bay_required' => $value->chem_bay_required,
            'chem_status' => $value->chem_status,
            'chem_bay_contractor' => $value->chem_bay_contractor,
            'chem_contractor_return_date' => $value->chem_contractor_return_date,
            'chem_date' => $value->chem_date,
            'end_chem_date' => $value->end_chem_date,
            'chem_completed' => $value->chem_completed,
            'treatment_bay_required' => $value->treatment_bay_required,
            'treatment_bay_contractor' => $value->treatment_bay_contractor,
            'treatment_date' => $value->treatment_date,
            'end_treatment_date' => $value->end_treatment_date,
            'treatment_contractor_return_date' => $value->treatment_contractor_return_date,
            'treatment_completed' => $value->treatment_completed,
            'treatment_status' => $value->treatment_status,
            'burn_bay_required' => $value->burn_bay_required,
            'burn_bay_contractor' => $value->burn_bay_contractor,
            'burn_contractor_return_date' => $value->burn_contractor_return_date,
            'burn_date' => $value->burn_date,
            'end_burn_date' => $value->end_burn_date,
            'burn_status' => $value->burn_status,
            'burn_completed' => $value->burn_completed,
            'blast_bay_required' => $value->blast_bay_required,
            'blast_bay_contractor' => $value->blast_bay_contractor,
            'blast_contractor_return_date' => $value->blast_contractor_return_date,
            'blast_date' => $value->blast_date,
            'end_blast_date' => $value->end_blast_date,
            'blast_status' => $value->blast_status,
            'blast_completed' => $value->blast_completed,
            'powder_bay_required' => $value->powder_bay_required,
            'powder_bay' => $value->powder_bay,
            'powder_date' => $value->powder_date,
            'end_powder_date' => $value->end_powder_date,
            'powder_status' => $value->powder_status,
            'powder_completed' => $value->powder_completed,
            'packaged' => $value->packaged,
            'updated_at' => $value->updated_at,
            'is_error_redo' => $value->is_error_redo,
            'job_comments' => CommentHelper::setCommentData($value->job_comments, $value, $value->lines),
            'lines' => $value->lines ? $value->lines->transform(function ($line) use ($value) {
                return [
                    "line_item_id" => $line->line_item_id,
                    "description" => $line->description,
                    "uom" => $line->measurement,
                    "sku" => $line->name,
                    // "product_name" => $line->line_product ? $line->line_product->product_name : null,
                    "product_name" => ($line->name ? $line->name : ($line->line_product ? $line->line_product->product_name : '')) . ' ' . ($line->description ? $line->description : ($line->line_product ? $line->line_product->desrciption : '')),
                    // "SKU" => $line->line_product ? $line->line_product->SKU : null,
                    "file_link" => $line->line_product ? $line->line_product->file_link : null,
                    "line_item_status" => $line->line_item_status,
                    "quantity" => $line->quantity,
                    "colour_name" => $line->colour,
                    "material" => $value->material,
                    "chem_bay" => $line->chem_bay,
                    "burn_bay" => $line->burn_bay,
                    "treatment_bay" => $line->treatment_bay,
                    "blast_bay" => $line->blast_bay,
                    "powder_bay" => $line->powder_bay,
                    "chem_date" => $line->chem_date,
                    "burn_date" => $line->burn_date,
                    "treatment_date" => $line->treatment_date,
                    "blast_date" => $line->blast_date,
                    "powder_date" => $line->powder_date,
                    "chem_status" => $line->chem_status,
                    "burn_status" => $line->burn_status,
                    "treatment_status" => $line->treatment_status,
                    "blast_status" => $line->blast_status,
                    "powder_status" => $line->powder_status,
                    "chem_completed" => $line->chem_completed,
                    "burn_completed" => $line->burn_completed,
                    "treatment_completed" => $line->treatment_completed,
                    "blast_completed" => $line->blast_completed,
                    "powder_completed" => $line->powder_completed
                ];
            }) : [],
        ];
    }

    public static function setUpdateJobStatusData($job)
    {
        return [
            'job_id' => $job->job_id,
            'priority'                   => $job->priority,
            'job_status' => $job->job_status,
            'lines' => $job->lines ? $job->lines->transform(function ($line) use ($job) {
                return [
                    "line_item_id" => $line->line_item_id,
                    "line_item_status" => $line->line_item_status
                ];
            }) : [],
        ];
    }

    public static function setQCData($value)
    {   
        $process = $value->treatment;
        $material = $value->material;
        $arr =  [
            'job_id' => $value->job_id,
            'invoice_number' => ($value->is_error_redo === "yes" ? "ERROR | REDO - ":"") . ($value->deals ? ($value->deals->invoice_number ? $value->deals->invoice_number. ' ' . $value->job_number : $value->job_prefix . ' ' . $value->job_number ) : $value->job_prefix . ' ' . $value->job_number),
            'hs_ticket_id' => $value->hs_ticket_id,
            'job_status' => $value->job_status,
            'priority' => $value->priority,
            'chem_priority' => $value->chem_priority,
            'burn_priority' => $value->burn_priority,
            'blast_priority' => $value->blast_priority,
            'treatment_priority' => $value->treatment_priority,
            'powder_priority' => $value->powder_priority,
            'amount' => $value->amount,
            "file_link" => $value->deals ? $value->deals->file_link : null,
            'promised_date' => $value->deals ? $value->deals->promised_date : null,
            'client_name' => $value->deals ? $value->deals->client_name : null,
            'po_number' => $value->deals ? $value->deals->po_number : null,
            'colour' => $value->colour,
            'material' => $material,
            'process' => $process,
            'chem_bay_required' => $value->chem_bay_required,
            'chem_status' => $value->chem_status,
            'chem_bay_contractor' => $value->chem_bay_contractor,
            'chem_contractor_return_date' => $value->chem_contractor_return_date,
            'chem_date' => $value->chem_date,
            'end_chem_date' => $value->end_chem_date,
            'chem_completed' => $value->chem_completed,
            'treatment_bay_required' => $value->treatment_bay_required,
            'treatment_bay_contractor' => $value->treatment_bay_contractor,
            'treatment_date' => $value->treatment_date,
            'end_treatment_date' => $value->end_treatment_date,
            'treatment_contractor_return_date' => $value->treatment_contractor_return_date,
            'treatment_completed' => $value->treatment_completed,
            'treatment_status' => $value->treatment_status,
            'burn_bay_required' => $value->burn_bay_required,
            'burn_bay_contractor' => $value->burn_bay_contractor,
            'burn_contractor_return_date' => $value->burn_contractor_return_date,
            'burn_date' => $value->burn_date,
            'end_burn_date' => $value->end_burn_date,
            'burn_status' => $value->burn_status,
            'burn_completed' => $value->burn_completed,
            'blast_bay_required' => $value->blast_bay_required,
            'blast_bay_contractor' => $value->blast_bay_contractor,
            'blast_contractor_return_date' => $value->blast_contractor_return_date,
            'blast_date' => $value->blast_date,
            'end_blast_date' => $value->end_blast_date,
            'blast_status' => $value->blast_status,
            'blast_completed' => $value->blast_completed,
            'powder_bay_required' => $value->powder_bay_required,
            'powder_bay' => $value->powder_bay,
            'powder_date' => $value->powder_date,
            'end_powder_date' => $value->end_powder_date,
            'powder_status' => $value->powder_status,
            'powder_completed' => $value->powder_completed,
            'packaged' => $value->packaged,
            'updated_at' => $value->updated_at,
            'is_error_redo' => $value->is_error_redo,
        ];

        $arr['quality_control'] = QCHelper::setData($value->qc);

        $arr['job_comments'] = CommentHelper::setCommentData($value->job_comments, $value, $value->lines);
        $arr['lines'] = $value->lines ? $value->lines->transform(function ($line) use ($value) {
            $sign = Dispatch::where('object_id', $line->line_item_id)->where('object_type', 'LINE_ITEM')->first();
            return [
                "line_item_id" => $line->line_item_id,
                "product_name" => ($line->name ? $line->name : ($line->line_product ? $line->line_product->product_name : '')) . ' ' . ($line->description ? $line->description : ($line->line_product ? $line->line_product->desrciption : '')),
                "file_link" => $line->line_product ? $line->line_product->file_link : null,
                "colour_name" => $line->colour,
                "signature" => $sign ? $sign->signature : '',
                "quantity" => $line->quantity,
                "line_item_status" => $line->line_item_status,
                "number_dispatched" => $line->number_dispatched,
                "material" => $value->material,
                "chem_bay" => $line->chem_bay,
                "burn_bay" => $line->burn_bay,
                "treatment_bay" => $line->treatment_bay,
                "blast_bay" => $line->blast_bay,
                "powder_bay" => $line->powder_bay,
                "chem_date" => $line->chem_date,
                "burn_date" => $line->burn_date,
                "treatment_date" => $line->treatment_date,
                "blast_date" => $line->blast_date,
                "powder_date" => $line->powder_date,
                "chem_status" => $line->chem_status,
                "burn_status" => $line->burn_status,
                "treatment_status" => $line->treatment_status,
                "blast_status" => $line->blast_status,
                "powder_status" => $line->powder_status,
                "chem_completed" => $line->chem_completed,
                "burn_completed" => $line->burn_completed,
                "treatment_completed" => $line->treatment_completed,
                "blast_completed" => $line->blast_completed,
                "powder_completed" => $line->powder_completed
            ];
        }) : [];
        return $arr;
    }

    public static function setDispatchData($value) {
        $arr =  [
            'job_id' => $value->job_id,
            'invoice_number' => $value->deals ? ($value->deals->invoice_number ? $value->deals->invoice_number. ' ' . $value->job_number : $value->job_prefix . ' ' . $value->job_number ) : $value->job_prefix . ' ' . $value->job_number,
            'hs_ticket_id' => $value->hs_ticket_id,
            'job_status' => $value->job_status,
            'priority' => $value->priority,
            "file_link" => $value->deals ? $value->deals->file_link : null,
            'promised_date' => $value->deals ? $value->deals->promised_date : null,
            'client_name' => $value->deals ? $value->deals->client_name : null,
            'po_number' => $value->deals ? $value->deals->po_number : null,
            'colour' => $value->colour,
            'material' => $value->material,
            'process' => $value->treatment,
            'chem_bay_required' => $value->chem_bay_required,
            'chem_status' => $value->chem_status,
            'chem_bay_contractor' => $value->chem_bay_contractor,
            'chem_contractor_return_date' => $value->chem_contractor_return_date,
            'chem_date' => $value->chem_date,
            'end_chem_date' => $value->end_chem_date,
            'chem_completed' => $value->chem_completed,
            'treatment_bay_required' => $value->treatment_bay_required,
            'treatment_bay_contractor' => $value->treatment_bay_contractor,
            'treatment_date' => $value->treatment_date,
            'end_treatment_date' => $value->end_treatment_date,
            'treatment_contractor_return_date' => $value->treatment_contractor_return_date,
            'treatment_completed' => $value->treatment_completed,
            'treatment_status' => $value->treatment_status,
            'burn_bay_required' => $value->burn_bay_required,
            'burn_bay_contractor' => $value->burn_bay_contractor,
            'burn_contractor_return_date' => $value->burn_contractor_return_date,
            'burn_date' => $value->burn_date,
            'end_burn_date' => $value->end_burn_date,
            'burn_status' => $value->burn_status,
            'burn_completed' => $value->burn_completed,
            'blast_bay_required' => $value->blast_bay_required,
            'blast_bay_contractor' => $value->blast_bay_contractor,
            'blast_contractor_return_date' => $value->blast_contractor_return_date,
            'blast_date' => $value->blast_date,
            'end_blast_date' => $value->end_blast_date,
            'blast_status' => $value->blast_status,
            'blast_completed' => $value->blast_completed,
            'powder_bay_required' => $value->powder_bay_required,
            'powder_bay' => $value->powder_bay,
            'powder_date' => $value->powder_date,
            'end_powder_date' => $value->end_powder_date,
            'powder_status' => $value->powder_status,
            'powder_completed' => $value->powder_completed,
            'packaged' => $value->packaged,
            'updated_at' => $value->updated_at,
        ];

        if ($value->column) {
            $arr['column'] = $value->column;
        }
        if ($value->signature) {
            $arr['signature'] = $value->signature;
        }

        if ($value->dispatch_customer_name) {
            $arr['customer_name'] = $value->dispatch_customer_name;
        }

        $arr['job_comments'] = CommentHelper::setCommentData($value->job_comments, $value, $value->lines);
        $arr['lines'] = $value->lines ? $value->lines->transform(function ($line) use ($value) {
            $sign = Dispatch::where('object_id', $line->line_item_id)->where('object_type', 'LINE_ITEM')->first();
                return [
                    "line_item_id" => $line->line_item_id,
                    // "product_name" => $line->line_product ? $line->line_product->product_name : null,
                    "product_name" => ($line->name ? $line->name : ($line->line_product ? $line->line_product->product_name : '')) . ' ' . ($line->description ? $line->description : ($line->line_product ? $line->line_product->desrciption : '')),
                    // "SKU" => $line->line_product ? $line->line_product->SKU : null,
                    "file_link" => $line->line_product ? $line->line_product->file_link : null,
                    "colour_name" => $line->colour,
                    "signature" => $sign ? $sign->signature : '',
                    "customer_name" => $sign ? $sign->dispatch_customer_name : '',
                    "quantity" => $line->quantity,
                    "line_item_status" => $line->line_item_status,
                    "created_at" => $line->created_at,
                    "updated_at" => $line->updated_at,
                    "deleted_at" => $line->deleted_at,
                    "number_dispatched" => $line->number_dispatched,
                    "number_remaining" => max($line->quantity - $line->number_dispatched, 0),
                    "material" => $value->material,
                    "chem_bay" => $line->chem_bay,
                "burn_bay" => $line->burn_bay,
                    "treatment_bay" => $line->treatment_bay,
                    "blast_bay" => $line->blast_bay,
                    "powder_bay" => $line->powder_bay,
                    "chem_date" => $line->chem_date,
                "burn_date" => $line->burn_date,
                    "treatment_date" => $line->treatment_date,
                    "blast_date" => $line->blast_date,
                    "powder_date" => $line->powder_date,
                    "chem_status" => $line->chem_status,
                "burn_status" => $line->burn_status,
                    "treatment_status" => $line->treatment_status,
                    "blast_status" => $line->blast_status,
                    "powder_status" => $line->powder_status,
                    "chem_completed" => $line->chem_completed,
                "burn_completed" => $line->burn_completed,
                    "treatment_completed" => $line->treatment_completed,
                    "blast_completed" => $line->blast_completed,
                    "powder_completed" => $line->powder_completed
                ];
        }) : [];
        return $arr;
    }

    public static function setNCRData($value) {
        $arr = [
            'job_id' => $value->failed_job_id,
            'job_number' => $value->job_number,
            'job_prefix' => $value->job_prefix,
            'invoice_number' => $value->deals ? ($value->deals->invoice_number ? $value->deals->invoice_number. ' ' . $value->job_number : $value->job_prefix . ' ' . $value->job_number ) : $value->job_prefix . ' ' . $value->job_number,
            'hs_ticket_id' => $value->hs_ticket_id,
            'amount' => $value->amount,
            'priority' => $value->priority,
            "file_link" => $value->deals ? $value->deals->file_link : null,
            'promised_date' => $value->deals ? $value->deals->promised_date : null,
            'client_name' => $value->deals ? $value->deals->client_name : null,
            'delivery_address' => $value->deals ? $value->deals->delivery_address : null,
            'dropoff_zone' => $value->deals ? $value->deals->dropoff_zone : null,
            'po_number' => $value->deals ? $value->deals->po_number : null,
            'colour' => $value->colour,
            'material' => $value->material,
            'process' => $value->treatment,
            'chem_bay_required' => $value->chem_bay_required,
            'chem_status' => $value->chem_status,
            'chem_bay_contractor' => $value->chem_bay_contractor,
            'chem_contractor_return_date' => $value->chem_contractor_return_date,
            'chem_date' => $value->chem_date,
            'chem_completed' => $value->chem_completed,
            'treatment_bay_required' => $value->treatment_bay_required,
            'treatment_bay_contractor' => $value->treatment_bay_contractor,
            'treatment_date' => $value->treatment_date,
            'treatment_contractor_return_date' => $value->treatment_contractor_return_date,
            'treatment_completed' => $value->treatment_completed,
            'treatment_status' => $value->treatment_status,
            'burn_bay_required' => $value->burn_bay_required,
            'burn_bay_contractor' => $value->burn_bay_contractor,
            'burn_contractor_return_date' => $value->burn_contractor_return_date,
            'burn_date' => $value->burn_date,
            'burn_status' => $value->burn_status,
            'burn_completed' => $value->burn_completed,
            'blast_bay_required' => $value->blast_bay_required,
            'blast_bay_contractor' => $value->blast_bay_contractor,
            'blast_contractor_return_date' => $value->blast_contractor_return_date,
            'blast_date' => $value->blast_date,
            'blast_status' => $value->blast_status,
            'blast_completed' => $value->blast_completed,
            'powder_bay_required' => $value->powder_bay_required,
            'powder_bay' => $value->powder_bay,
            'powder_date' => $value->powder_date,
            'powder_status' => $value->powder_status,
            'powder_completed' => $value->powder_completed,
            'packaged' => $value->packaged,
            'ncr' => $value->ncr,
            'updated_at' => $value->updated_at,
        ];
        $user = User::where('user_id',$value->ncr->user_id)->first();

        $arr['ncr']['firstname'] = $user->firstname;
        $arr['ncr']['lastname'] = $user->lastname;

        $arr['ncr']['job_prefix'] = $value->job_prefix;

        $arr['lines'] = $value->lines ? $value->lines->transform(function ($line) use ($value) {
            $sign = Dispatch::where('object_id', $line->line_item_id)->where('object_type', 'LINE_ITEM')->first();
                return [
                    "line_item_id" => $line->line_item_id,
                    // "product_name" => $line->line_product ? $line->line_product->product_name : null,
                    "product_name" => ($line->name ? $line->name : ($line->line_product ? $line->line_product->product_name : '')) . ' ' . ($line->description ? $line->description : ($line->line_product ? $line->line_product->desrciption : '')),
                    // "SKU" => $line->line_product ? $line->line_product->SKU : null,
                    "file_link" => $line->line_product ? $line->line_product->file_link : null,
                    "colour_name" => $line->colour,
                    "signature" => $sign ? $sign->signature : '',
                    "customer_name" => $sign ? $sign->dispatch_customer_name : '',
                    "quantity" => $line->quantity,
                    "line_item_status" => $line->line_item_status,
                    "created_at" => $line->created_at,
                    "updated_at" => $line->updated_at,
                    "deleted_at" => $line->deleted_at,
                    "number_dispatched" => $line->number_dispatched,
                    "number_remaining" => max($line->quantity - $line->number_dispatched, 0),
                    "material" => $value->material,
                    "chem_bay" => $line->chem_bay,
                "burn_bay" => $line->burn_bay,
                    "treatment_bay" => $line->treatment_bay,
                    "blast_bay" => $line->blast_bay,
                    "powder_bay" => $line->powder_bay,
                    "chem_date" => $line->chem_date,
                "burn_date" => $line->burn_date,
                    "treatment_date" => $line->treatment_date,
                    "blast_date" => $line->blast_date,
                    "powder_date" => $line->powder_date,
                    "chem_status" => $line->chem_status,
                "burn_status" => $line->burn_status,
                    "treatment_status" => $line->treatment_status,
                    "blast_status" => $line->blast_status,
                    "powder_status" => $line->powder_status,
                    "chem_completed" => $line->chem_completed,
                "burn_completed" => $line->burn_completed,
                    "treatment_completed" => $line->treatment_completed,
                    "blast_completed" => $line->blast_completed,
                    "powder_completed" => $line->powder_completed
                ];
        }) : [];

        return $arr;
    }
}
